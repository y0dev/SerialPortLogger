<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:converters="clr-namespace:SerialLogAnalyzer.Helpers.Converters">

	<converters:BooleanToDropShadowEffectConverter x:Key="BooleanToDropShadowEffectConverter" />
	
	<!-- Define a style for rounded buttons -->
	<Style TargetType="Button" x:Key="RoundedButtonStyle">
		<Setter Property="Background" Value="{DynamicResource ButtonBaseColor}"/>
		<!-- Primary color -->
		<Setter Property="Foreground" Value="White"/>
		<!-- Text color -->
		<Setter Property="Padding" Value="10,5"/>
		<!-- Inner spacing -->
		<Setter Property="Margin" Value="5"/>
		<!-- Outer spacing -->
		<Setter Property="BorderBrush" Value="Transparent"/>
		<!-- Border color -->
		<Setter Property="BorderThickness" Value="1"/>
		<!-- Border thickness -->
		<Setter Property="Cursor" Value="Hand"/>
		<!-- Hand cursor -->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            Effect="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=IsMouseOver, Converter={StaticResource BooleanToDropShadowEffectConverter}}">
						<!-- Shadow effect on hover -->
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource ButtonMouseOverColor}"/>
				<!-- Lighter color on hover -->
				<Setter Property="BorderBrush" Value="{DynamicResource ButtonMouseOverColor}"/>
				<!-- Border color on hover -->
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource ButtonPressedColor}"/>
				<!-- Darker color on click -->
				<Setter Property="BorderBrush" Value="{DynamicResource ButtonPressedColor}"/>
				<!-- Border color on click -->
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" Value="{DynamicResource ButtonDisabledColor}"/>
				<!-- Disabled color -->
				<Setter Property="Foreground" Value="{DynamicResource ButtonDisabledTextColor}"/>
				<!-- Text color when disabled -->
				<Setter Property="Cursor" Value="Arrow"/>
				<!-- Change cursor to default when disabled -->
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="RadioButton" x:Key="MenuButtonStyle">
		<Style.Setters>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Grid Background="{TemplateBinding Background}" 
							   VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
							<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}" VerticalAlignment="Center"
									   Margin="50,0,0,0" FontSize="18"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>

		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="Background" Value="#22202F"/>
			</Trigger>			
		</Style.Triggers>
	</Style>

	<!-- Toggle Switch Style -->
	<Style x:Key="ToggleSwitchStyle" TargetType="ToggleButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid Width="50" Height="25">
						<!-- Background Border -->
						<Border x:Name="SwitchBackground" 
                            Background="{DynamicResource ToggleSwitchBackground}"
                            CornerRadius="12.5"
                            BorderBrush="{DynamicResource ToggleSwitchBorderColor}"
                            BorderThickness="1" />

						<!-- Thumb -->
						<Ellipse x:Name="Thumb" 
                             Fill="{DynamicResource ToggleSwitchThumbColor}"
                             Width="22" Height="22"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Left"
                             Margin="2,0,0,0" />

					</Grid>

					<ControlTemplate.Triggers>
						<!-- Checked State -->
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="SwitchBackground" Property="Background" Value="{DynamicResource ToggleSwitchCheckedBackground}" />
							<Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right" />
						</Trigger>

						<!-- Disabled State -->
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="SwitchBackground" Property="Background" Value="{DynamicResource ToggleSwitchDisabledBackground}" />
							<Setter TargetName="Thumb" Property="Fill" Value="{DynamicResource ToggleSwitchDisabledThumbColor}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>
