<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SerialLogAnalyzer.Themes">

	<!-- TabItem Style for Both Light and Dark Themes -->
	<Style TargetType="TabItem" x:Key="TailwindTabItemStyle">
		<Setter Property="Background" Value="{DynamicResource TabItemBackground}"/>
		<Setter Property="Foreground" Value="{DynamicResource TabItemForeground}"/>
		<Setter Property="Padding" Value="10,5"/>
		<Setter Property="MinWidth" Value="100"/>
		<Setter Property="Margin" Value="0,0,0,0"/>
		<!-- Ensure no unwanted margins between tabs -->
		<Setter Property="BorderBrush" Value="{DynamicResource TabItemBorderColor}"/>
		<Setter Property="BorderThickness" Value="1,1,0,1"/>
		<!-- Set border thickness for all sides except the bottom -->
		<Setter Property="Cursor" Value="Hand"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabItem">
					<Grid>
						<Border Name="TabBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6,6,0,0">
							<!-- Rounded both top corners -->
							<ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              ContentSource="Header"/>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<!-- Selected State -->
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource TabItemSelectedBackground}"/>
							<Setter TargetName="TabBorder" Property="BorderBrush" Value="{DynamicResource TabItemSelectedBorderColor}"/>
						</Trigger>

						<!-- Hover State -->
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource TabItemHoverBackground}"/>
							<Setter Property="Foreground" Value="{DynamicResource TabItemHoverForeground}"/>
						</Trigger>

						<!-- Disabled State -->
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource TabItemDisabledBackground}"/>
							<Setter Property="Foreground" Value="{DynamicResource TabItemDisabledForeground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
